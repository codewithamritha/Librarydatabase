----------------creating books, authors and book details table from raw data file------------

CREATE TABLE dbo.lib_books(
ISBN10 NVARCHAR(50) primary key not null ,
ISBN13 BIGINT not null,
TITLE VARCHAR(MAX)
);
Insert into dbo.lib_books
select isbn10, isbn13, title from dbo.books;

 select * from dbo.books

--CREATE TABLE dbo.book_authors(
--Author_id int,
--ISBN10 NVARCHAR(50),
--ISBN13 bigint);
--create sequence Authorseq START WITH 1 increment by 1;

SELECT identity(int,1,1) Author_id, B.ISBN10, B.isbn13 INTO dbo.book_authors FROM dbo.books B;
 select * from dbo.book_authors

Create table dbo.authors(
    Author_Id int,
    Name varchar(4000));
INSERT INTO dbo.authors
SELECT A.Author_id, P.Authro 
FROM dbo.books P
inner join dbo.book_authors A
on A.isbn10 = P.isbn10;


Create table project1_book_copies(
BOOK_ID VARCHAR2(26),
ISBN10 VARCHAR2(26),
BRANCH_ID NUMBER(38,0),
no_of_copies NUMBER(38,0),
CONSTRAINT PROJECT1_BOOK_COPIES_pk PRIMARY KEY (BOOK_ID)
);


create sequence BOOK_ID START WITH 1 increment by 1;
INSERT INTO PROJECT1_BOOK_COPIES
SELECT BOOK_ID.nextval,BOOK_ID,BRANCH_ID,no_of_copies FROM PROJECT1_BOOK_COPIES_LOAD;
select * from PROJECT1_BOOK_COPIES

-------------creating a borrower table from raw data file -----------------------------------------
CREATE TABLE PROJECT1_BORROWER
(
CARD_NO VARCHAR2(26)NOT NULL PRIMARY KEY,
SSN VARCHAR2(26),
FIRST_NAME VARCHAR2(26),
LAST_NAME VARCHAR2(26),
ADDRESS VARCHAR2(128),
PHONE VARCHAR2(26)
);

create table temp1 (detail VARCHAR2(4000));
insert into temp1
select * from project1_borrowers_load;


SELECT m.detail
,REGEXP_SUBSTR (detail, '[^,]+', 1, 1) AS Card_No
,REGEXP_SUBSTR (detail, '[^,]+', 1, 2) AS SSN
,REGEXP_SUBSTR (detail, '[^,]+', 1, 3) AS F_Name
,REGEXP_SUBSTR (detail, '[^,]+', 1, 4) AS L_Name
,REGEXP_SUBSTR (detail, '[^,]+', 1, 6) AS Address
,REGEXP_SUBSTR (detail, '[^,]+', 1, 9) AS PHONE
FROM temp1 m;


INSERT INTO PROJECT1_BORROWER
SELECT CARD_NO,SSN,F_NAME,L_NAME,ADDRESS,PHONE FROM 
(SELECT m.detail
,REGEXP_SUBSTR (detail, '[^,]+', 1, 1) AS Card_No
,REGEXP_SUBSTR (detail, '[^,]+', 1, 2) AS SSN
,REGEXP_SUBSTR (detail, '[^,]+', 1, 3) AS F_Name
,REGEXP_SUBSTR (detail, '[^,]+', 1, 4) AS L_Name
,REGEXP_SUBSTR (detail, '[^,]+', 1, 6) AS Address
,REGEXP_SUBSTR (detail, '[^,]+', 1, 9) AS PHONE
FROM temp1 m);
------------------creating a book loans table ------------------------------------

CREATE TABLE project1_book_loans(LOAN_ID NUMBER GENERATED BY DEFAULT ON NULL AS 
IDENTITY,
BOOK_ID VARCHAR2(20),
CARD_NO varchar2(20),
DATE_OUT DATE,
DUE_DATE DATE,
DATE_IN DATE,
CONSTRAINT LoansPk PRIMARY KEY(LOAN_ID));
CREATE TABLE project1_borrowers_tmp ( ID NUMBER GENERATED BY DEFAULT ON NULL AS 
IDENTITY, CARD_NO varchar2(4000));
INSERT INTO project1_borrowers_tmp (CARD_NO) 
SELECT b.CARD_NO from PROJECT1_BORROWER b;
CREATE TABLE project1_loanstmp( BOOK_ID varchar2(4000));
INSERT INTO project1_loanstmp(BOOK_ID) (SELECT c.BOOK_ID from project1_book_copies 
c where rownum<=500);

INSERT INTO project1_book_loans (BOOK_ID) (SELECT BOOK_ID FROM project1_loanstmp 
WHERE rownum<=200);
INSERT INTO project1_book_loans (BOOK_ID) (SELECT BOOK_ID FROM project1_book_loans 
WHERE rownum<=100);
INSERT INTO project1_book_loans (BOOK_ID) (SELECT BOOK_ID FROM project1_book_loans 
WHERE rownum<=100);
INSERT INTO project1_book_loans (BOOK_ID) (SELECT BOOK_ID FROM project1_loanstmp 
WHERE rownum<=100);

UPDATE project1_book_loans bl SET bl.CARD_NO = (SELECT CARD_NO FROM 
project1_borrowers_tmp bt where bl.LOAN_ID=bt.ID);
UPDATE project1_book_loans bl SET bl.DATE_OUT=sysdate-rownum;
UPDATE project1_book_loans bl SET bl.DUE_DATE= bl.DATE_OUT + 14;
UPDATE project1_book_loans bl SET bl.DATE_IN = bl.DATE_OUT + 15 WHERE LOAN_ID>=0 
AND LOAN_ID<200; 
UPDATE project1_book_loans bl SET bl.DATE_IN= bl.DATE_OUT + 12 WHERE LOAN_ID>=200 
AND LOAN_ID<278;
UPDATE project1_book_loans bl SET bl.DATE_IN= bl.DATE_OUT + 5 WHERE LOAN_ID>=278 
AND LOAN_ID<378;
commit;

---------------creating a fine amount table----------------------------

CREATE TABLE project1_fines(LOAN_ID NUMBER(38,0) ,
FINE_AMT NUMBER(38,0),
PAID VARCHAR2(28) ,
BOOK_ID varchar2(20)NOT NULL,
DUE_DATE DATE NOT NULL,
DATE_IN DATE,
CONSTRAINT FinesPk PRIMARY KEY(LOAN_ID),
CONSTRAINT FinesFk FOREIGN KEY(LOAN_ID) REFERENCES project1_book_loans);
INSERT INTO project1_fines(LOAN_ID,DUE_DATE,DATE_IN,BOOK_ID) 
SELECT LOAN_ID ,DUE_DATE,DATE_IN,BOOK_ID FROM project1_book_loans bl 
WHERE bl.DATE_IN IS NULL OR bl.DATE_IN>bl.DUE_DATE;
UPDATE project1_fines f SET FINE_AMT=(
SELECT 10*(DATE_IN-DUE_DATE) FROM project1_book_loans bl 
WHERE f.LOAN_ID= bl.LOAN_ID 
AND DATE_IN>DUE_DATE 
AND DATE_IN IS NOT NULL);
UPDATE project1_fines f SET PAID= 
CASE WHEN FINE_AMT IS NULL 
THEN 'NO' 
ELSE 'YES' 
END;
commit;

-------------------Book Search and availability------------------------

SELECT DISTINCT bk.ISBN10,bk.ISBN13, bk.TITLE, a.NAME,bc.NO_OF_COPIES,bc.BRANCH_ID 
FROM project1_books bk
LEFT JOIN project1_book_authors ba ON cast(bk.ISBN13 as varchar2(26))=ba.ISBN10
LEFT JOIN project1_authors a ON ba.AUTHOR_ID=a.AUTHOR_ID 
LEFT JOIN project1_book_copies bc ON bk.ISBN10=bc.ISBN10
WHERE bk.TITLE LIKE '%&&param24%' OR 
bk.TITLE LIKE '%&&param24' OR 
bk.TITLE LIKE '&&param24%' OR 
bk.ISBN13 LIKE '%&&param24%' OR 
bk.ISBN13 LIKE '&&param24%'OR 
bk.ISBN13 LIKE '%&&param24' OR
a.NAME LIKE '%&&param24%' OR 
a.NAME LIKE '&&param24%' OR 
a.NAME LIKE '%&&param24';


SELECT DISTINCT bc.ISBN10,bk.ISBN13, bk.TITLE, a.NAME,bc.NO_OF_COPIES,bc.BRANCH_ID 
FROM project1_books bk
INNER JOIN project1_book_authors ba ON bk.ISBN10=ba.ISBN10
INNER JOIN project1_authors a ON ba.AUTHOR_ID=a.AUTHOR_ID 
INNER JOIN project1_book_copies bc ON bk.ISBN10=bc.ISBN10
INNER JOIN project1_library_branch lb ON bc.BRANCH_ID=lb.BRANCH_ID
INNER JOIN project1_book_copies_load bcl ON bc.ISBN10=bcl.BOOK_ID
WHERE bk.TITLE LIKE '%&&param24%' OR 
bk.TITLE LIKE '%&&param24' OR  
bk.TITLE LIKE '&&param24%' OR 
bk.ISBN13 LIKE '%&&param24%' OR 
bk.ISBN13 LIKE '&&param24%'OR 
bk.ISBN13 LIKE '%&&param24' OR
a.NAME LIKE '%&&param24%' OR 
a.NAME LIKE '&&param24%' OR 
a.NAME LIKE '%&&param24';


SELECT * FROM project1_book_copies bc
WHERE bc.BRANCH_ID LIKE '_';
SELECT ISBN,TITLE,'Y' as AVAILABLE, LISTAGG(NAME,' ,') WITHIN GROUP (ORDER BY NAME)
as Author,NO_OF_COPIES FROM
(SELECT ISBN,'Y',TITLE,NO_OF_COPIES,NAME FROM (SELECT a.ISBN,TITLE,NAME, 
NO_OF_COPIES FROM 
project1_book_copies a,project1_books b,project1_authors c,project1_books_authors d
 WHERE a.ISBN=b.ISBN10 AND c.AUTHOR_ID=d.AUTHOR_ID AND 
 b.ISBN13=d.ISBN13 AND NO_OF_COPIES>0 AND BRANCH_ID=:BRANCH_DETAILS
 and (a.ISBN10=:BOOK_2 or lower(TITLE) like '%' || lower(:BOOK_2) || '%' or 
lower(NAME) like '%' || lower(:BOOK_2) || '%' )))
GROUP BY ISBN10,TITLE ,NO_OF_COPIES;

Union

SELECT ISBN,TITLE,'N' as AVAILABLE, LISTAGG(NAME,' ,') WITHIN GROUP (ORDER BY NAME)
as Author,NO_OF_COPIES FROM
(SELECT ISBN,'N',TITLE,NO_OF_COPIES,NAME FROM (SELECT a.ISBN,TITLE,NAME, 
NO_OF_COPIES FROM 
project1_book_copies a,project1_books b,project1_authors c,project1_books_authors d
 where a.ISBN10=b.ISBN10 and c.AUTHOR_ID=d.AUTHOR_ID and b.ISBN13=d.ISBN13 
and NO_OF_COPIES=0 and BRANCH_ID=:BRANCH_DETAILS
 and (a.ISBN10=:BOOK_2 or lower(TITLE) like '%' || lower(:BOOK_2) || '%' or 
lower(NAME) like '%' || lower(:BOOK_2) || '%' )))
group by ISBN10,TITLE ,NO_OF_COPIES);
SELECT ISBN10,TITLE,NAME,BRANCH_ID FROM
(SELECT bk.ISBN10,bk.Title,auth.author_name,bkcp.branch_id
FROM project1_books bk
INNER JOIN project1_book_authors auth ON bk.ISBN13=auth.ISBN13
INNER JOIN project1_authors a ON auth.AUTHOR_ID=a.AUTHOR_ID
INNER JOIN project1_book_copies bkcp ON bkcp.ISBN=bk.ISBN10
WHERE UPPER(auth.NAME) LIKE UPPER(CONCAT('%',CONCAT('&NAME','%')))
AND UPPER(bk.Title) LIKE UPPER(CONCAT('%',CONCAT('&TITLE','%')))
AND bk.ISBN10 LIKE CONCAT('%',CONCAT('&ISBN10','%'))
GROUP BY bk.ISBN10,bk.Title,auth.name,bkcp.branch_id);


Select distinct a.isbn13, a.book_title, c.author_name,f.no_of_copies,e.branch_id 
from project1_books a 
left join project1_book_authors b on a.isbn13=b.isbn13 
left join project1_author c on b.author_id=c.author_id 
left join project1_book_copies d on b.isbn13=d.isbn 
left join project1_library_branch e on d.branch_id=e.branch_id 
left join project1_book_copies_load f on d.isbn=f.book_id 
Where a.book_title like '%&&param24%' or a.book_title like '%&&param24' 
or a.book_title like '&&param24%' or a.isbn13 like '%&&param24%' 
or a.isbn13 like '&&param24%'or a.isbn13 like '%&&param24' 
or c.author_name like '%&&param24%' 
or c.author_name like '&&param24%' or c.author_name like '%&&param24';

------------------Search by author name--------------------

SELECT ISBN13,TITLE,NAME,BRANCH_ID FROM
(SELECT bk.ISBN13,bk.TITLE,auth.NAME,bkcp.BRANCH_ID
FROM project1_books bk
INNER JOIN project1_book_authors ba ON bk.ISBN13=ba.ISBN13
INNER JOIN project1_authors auth ON ba.AUTHOR_ID=auth.AUTHOR_ID
LEFT JOIN project1_book_copies bkcp ON bkcp.ISBN=bk.ISBN10
WHERE UPPER(auth.NAME) LIKE UPPER(CONCAT('%',CONCAT('&NAME','%')))
AND UPPER(bk.TITLE) LIKE UPPER(CONCAT('%',CONCAT('&TITLE','%')))
AND bk.ISBN13 LIKE CONCAT('%',CONCAT('&ISBN13','%'))
GROUP BY bk.ISBN13,bk.TITLE,auth.NAME,bkcp.BRANCH_ID);

------------------Reporting top 10 popular books-----------------
select * from 
(select first_name,fine_amt from
(
select project1_fines.fine_amt, project1_borrower.first_name 
from project1_book_loans 
join project1_fines
on project1_book_loans.loan_id=project1_fines.loan_id
join project1_borrower 
on project1_book_loans.card_no = PROJECT1_BORROWER.card_no
where project1_fines.paid='Yes' 
and project1_book_loans.date_in between add_months(trunc(sysdate,'mm'),-1) and 
add_months(trunc(sysdate,'mm'),0)
)
order by fine_amt desc)
where rownum<=10;

--- Code to get the outstanding fine amount-------------

Select d.branch_name, d.branch_id, sum(a.fine_amt) AS Outstanding_Fine_Amount 
from project1_fines a,project1_book_loans b,project1_book_copies 
c,project1_library_branch d where a.loan_id = b.loan_id AND b.book_id = c.book_id 
AND c.branch_id = d.branch_id group by d.branch_name, d.branch_id order by 
Outstanding_Fine_Amount DESC;


